pipeline:
  name: Sample
  identifier: Sample
  projectIdentifier: Harness_POC
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: praneeshtech
        repoName: python-pipeline-samples
        build: <+input>
  stages:
    - stage:
        name: "Listing directories "
        identifier: Listing_directories
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Directory Check
                  identifier: Directory_Check
                  spec:
                    shell: Sh
                    command: |-
                      pwd
                      ls -ltra
              - step:
                  type: Run
                  name: Image Build and Push
                  identifier: Image_Build_and_Push
                  spec:
                    shell: Sh
                    command: |-
                      #!/bin/bash
                      set -e

                      # Define variables
                      IMAGE_NAME="vijaysoundarapandiyan/python-pipeline-samples"
                      IMAGE_TAG="1.0"
                      DOCKERFILE_PATH="Dockerfile"
                      BUILD_CONTEXT="."

                      # Create Docker config directory
                      mkdir -p ~/.docker

                      # Write credentials to config.json using Harness secret
                      cat > ~/.docker/config.json <<EOF
                      {
                        "auths": {
                          "https://index.docker.io/v1/": {
                            "auth": "$(echo -n 'vijaysoundarapandiyan:${HARNESS_SECRET_docker_secret}' | base64)"
                          }
                        }
                      }
                      EOF

                      # Build the image
                      docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -f ${DOCKERFILE_PATH} ${BUILD_CONTEXT}

                      # Push the image
                      docker push ${IMAGE_NAME}:${IMAGE_TAG}

                      echo "âœ… Docker image pushed: ${IMAGE_NAME}:${IMAGE_TAG}"
